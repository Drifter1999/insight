<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Insight">
    <!-- tbluserTable CRUD -->

    <!--id 중복 확인 -->
    <select id="UserCheck" parameterType="string" resultType="_int">
        select  count(*)
        from    tbluser
        where   userid = #{userid}
    </select>

    <!--로그인 계정체크-->
    <select id="LoginCheck" parameterType="hashmap" resultType="UDTO">
        select  *
        from    tbluser
        where   userid = #{userid}
        and     userpw = #{userpw}
    </select>

    <!--해당 회원의 모든 정보 보기-->
    <select id="UserSelectOne" parameterType="string" resultType="UDTO">
        select  *
        from    tbluser
        where   userid = #{userid}
    </select>

    <!--모든 회원 보기-->
    <select id="UserSelectAll" resultType="UDTO">
        select  *
        from    tbluser
    </select>

    <insert id="insert" parameterType="UDTO">
        insert into tbluser values (#{userid}, #{username}, #{userpw}, #{useremail}, #{useraddr}, #{userphone})
    </insert>

    <!--회원 정보 변경-->
    <update id="UserUpdate" parameterType="UDTO">
        update  tblUser
        set     username = #{username},
            userpw = #{userpw},
            useremail = #{useremail},
            useraddr = #{useraddr},
            userphone = #{userphone}
        where   userid = #{userid}
    </update>

    <!--회원 정보 삭제-->
    <delete id="UserDelete" parameterType="string">
        delete from tbluser where userid = #{userid}
    </delete>

    <!-- product  -->
    <!--등록된 판매중인 상품 조회 (가장 최근 순)-->
    <select id="ProductSelectDESC" resultType="PDTO">
        select  *
        from    product
        where   productstate = 'Y'
        order by productdate desc
    </select>

    <!--등록된 판매중인 상품 조회 (오래된 순)-->
    <select id="ProductSelectASC" resultType="PDTO">
        select  *
        from    product
        where   productstate = 'Y'
        order by productdate
    </select>

    <!--상품 등록 -->
    <insert id="ProductInsert" parameterType="hashmap">
        insert into PRODUCT values (
            product_seq.NEXTVAL,
            #{productCategoryNum},
            #{userid},
            #{productname},
            #{producttitle},
            #{productdetail},
            #{productquantity},
            #{productprice},
            'none',
            'none',
            'none',
            SYSDATE,
            'Y'
        );
    </insert>

    <!--상품 상세 내역-->
    <select id="ProductDetail" resultType="PDTO" parameterType="_int">
        select  *
        from    product
        where   productnum = #{productnum}
    </select>

    <!--제품 수정-->
    <update id="ProductUpdate" parameterType="PDTO">
        UPDATE 	PRODUCT
        SET		PRODUCTCATEGORYNUM = #{productcategorynum},
                USERID = #{userid},
                PRODUCTNAME = #{productname},
                PRODUCTTITLE = #{producttitle},
                PRODUCTDETAIL = #{productdetail},
                PRODUCTQUANTITY = #{productquantity},
                PRODUCTPRICE = #{productprice},
                PRODUCTIMAGE1 = 'none',
                PRODUCTIMAGE2 = 'none',
                PRODUCTIMAGE3 = 'none',
                PRODUCTDATE = SYSDATE ,
                PRODUCTSTATE = #{productstate}
        WHERE 	PRODUCTNUM = #{productnum}
    </update>

    <!-- 제품 삭제 -->
    <delete id="ProductDelete" parameterType="_int">
        delete from product
        where productnum = #{productnum}
    </delete>
</mapper>











